//----------------------------- Header

header {
  text-align: center;
  height: 80vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  h1 {
    color: white;
    font-size: 4rem;
    line-height-step: 1.3em;
    letter-spacing: 2.7px;
  }

  h2 {
    color: $red;
    font-size: 2rem;
    margin-top: -1rem;
    letter-spacing: 1.2rem;
  }
}

.bookNow {
  color: $purple;
  background-color: white;
  padding: 0.5rem 1rem;
  border-radius: 20px;
  transition: 0.3s;
  font-size: 1.5rem;
  letter-spacing: 0.2px;
}

.bookNow:hover {
  color: white;
  background-color: $lightpurple;
  padding: 0.8rem 1.8rem;
}
// Second header

.ml11 {
  font-weight: 700;
  font-size: 1.8rem;
  margin-bottom: 3rem;
}

.ml11 .text-wrapper {
  position: relative;
  display: inline-block;
  padding-top: 0.1em;
  padding-right: 0.05em;
  padding-bottom: 0.15em;
}

.ml11 .line {
  opacity: 0;
  position: absolute;
  left: 0;
  height: 100%;
  width: 3px;
  background-color: #fff;
  transform-origin: 0 50%;
}

.ml11 .line1 {
  top: 0;
  left: 0;
}

.ml11 .letter {
  display: inline-block;
  line-height: 1em;
  color: white;
  letter-spacing: 3px;
}

// Animation stuff

.headerText {
  background: none;
  position: absolute;
  left: 10%;
  right: 10%;
}

.background {
  height: 80vh;
  background: $purple;
  overflow-x: hidden !important;
}

$particleSize: 5vmin;
$animationDuration: 6s;
$amount: 20;
.background span {
  width: $particleSize;
  height: $particleSize;
  border-radius: $particleSize;
  backface-visibility: hidden;
  position: absolute;
  animation-name: move;
  animation-duration: $animationDuration;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  $colors: ($darkpurple, $purple, $lightpurple);
  @for $i from 1 through $amount {
    &:nth-child(#{$i}) {
      color: nth($colors, random(length($colors)));
      top: random(70) * 1%;
      left: random(100) * 1%;
      animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
      animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
      transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
      $blurRadius: (random() + 0.5) * $particleSize * 0.5;
      $x: if(random() > 0.5, -1, 1);
      box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
    }
  }
}

@keyframes move {
  100% {
    transform: translate3d(0, 0, 1px) rotate(360deg);
  }
}
//----------------------------- Media queries

@media only screen and (max-width: 1380px) {
  header {
    h1 {
      font-size: 3rem;
      line-height-step: 1.3em;
      letter-spacing: 1px;
    }
    .ml11 {
      font-weight: 700;
      font-size: 1.2rem;
    }
  }
}

@media only screen and (max-width: 1020px) {
  header {
    h1 {
      font-size: 2.5rem;
      line-height-step: 1.3em;
      letter-spacing: 1px;
    }
    .ml11 {
      font-weight: 700;
      font-size: 1rem;
    }
  }
}

@media only screen and (max-width: 900px) {
  header {
    h1 {
      font-size: 2rem;
    }
    .ml11 {
      font-weight: 700;
      font-size: 0.9rem;
    }
  }
}

@media only screen and (max-width: 850px) {
  header {
    h1 {
      font-size: 1.8rem;
    }
    .ml11 {
      font-size: 1rem;
      width: 260px;
      margin: 0 auto;
    }
  }
}

@media only screen and (max-width: 660px) {
  header {
    h1 {
      font-size: 1.6rem;
    }
  }
}

@media only screen and (max-width: 560px) {
  header {
    h1 {
      font-size: 1.4rem;
    }
  }
}

@media only screen and (max-width: 490px) {
  header {
    h1 {
      font-size: 1.2rem;
    }
  }
}

@media only screen and (max-width: 450px) {
  header {
    h1 {
      font-size: 1rem;
    }
  }
}

@media only screen and (max-width: 360px) {
  header {
    h1 {
      font-size: 1rem;
    }
    .ml11 {
      font-size: 0.8rem;
      width: 260px;
      margin: 0 auto;
    }
  }
}
